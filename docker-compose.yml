services:
  auth:
    build:
      context: .
      dockerfile: Services.API/Auth/Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ./.env:/app/.env
    restart: always

  floorplan-device:
    build:
      context: .
      dockerfile: Services.API/FloorplanDevice/Dockerfile
    ports:
      - "5003:5003"
    # depends_on:
    #   - mst-floorplan
    #   - mst-accesscctv
    #   - mst-blereader
    #   - mst-accesscontrol
    #   - floorplan-masked-area
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  floorplan-masked-area:
    build:
      context: .
      dockerfile: Services.API/FloorplanMaskedArea/Dockerfile
    ports:
      - "5004:5004"
    # depends_on:
    #   - mst-floor
    #   - mst-floorplan
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-floor:
    build:
      context: .
      dockerfile: Services.API/MstFloor/Dockerfile
    ports:
      - "5013:5013"
    volumes:
      - ./Uploads/FloorImages:/app/Uploads/FloorImages
      - ./.env:/app/.env
    restart: always

  mst-floorplan:
    build:
      context: .
      dockerfile: Services.API/MstFloorplan/Dockerfile
    ports:
      - "5014:5014"
    # depends_on:
    #   - mst-floor
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-integration:
    build:
      context: .
      dockerfile: Services.API/MstIntegration/Dockerfile
    ports:
      - "5015:5015"
    # depends_on:
    #   - mst-brand
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-accesscontrol:
    build:
      context: .
      dockerfile: Services.API/MstAccessControl/Dockerfile
    ports:
      - "5006:5006"
    # depends_on:
    #   - mst-brand
    #   - mst-integration
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-accesscctv:
    build:
      context: .
      dockerfile: Services.API/MstAccessCctv/Dockerfile
    ports:
      - "5005:5005"
    # depends_on:
    #   - mst-integration
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-blereader:
    build:
      context: .
      dockerfile: Services.API/MstBleReader/Dockerfile
    ports:
      - "5008:5008"
    # depends_on:
    #   - mst-brand
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-brand:
    build:
      context: .
      dockerfile: Services.API/MstBrand/Dockerfile
    ports:
      - "5009:5009"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-application:
    build:
      context: .
      dockerfile: Services.API/MstApplication/Dockerfile
    ports:
      - "5007:5007"
    volumes:
      - ./.env:/app/.env
    restart: always

  visitor:
    build:
      context: .
      dockerfile: Services.API/Visitor/Dockerfile
    ports:
      - "5019:5019"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  alarm-record-tracking:
    build:
      context: .
      dockerfile: Services.API/AlarmRecordTracking/Dockerfile
    ports:
      - "5002:5002"
    # depends_on:
    #   - visitor
    #   - mst-blereader
    #   - floorplan-masked-area
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-building:
    build:
      context: .
      dockerfile: Services.API/MstBuilding/Dockerfile
    ports:
      - "5010:5010"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-department:
    build:
      context: .
      dockerfile: Services.API/MstDepartment/Dockerfile
    ports:
      - "5011:5011"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-district:
    build:
      context: .
      dockerfile: Services.API/MstDistrict/Dockerfile
    ports:
      - "5012:5012"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-member:
    build:
      context: .
      dockerfile: Services.API/MstMember/Dockerfile
    ports:
      - "5016:5016"
    # depends_on:
    #   - mst-application
    #   - mst-organization
    #   - mst-department
    #   - mst-district
    volumes:
      - ./Uploads/MemberFaceImages:/app/Uploads/MemberFaceImages
      - ./.env:/app/.env
    restart: always

  mst-organization:
    build:
      context: .
      dockerfile: Services.API/MstOrganization/Dockerfile
    ports:
      - "5017:5017"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  tracking-transaction:
    build:
      context: .
      dockerfile: Services.API/TrackingTransaction/Dockerfile
    ports:
      - "5018:5018"
    # depends_on:
    #   - mst-blereader
    #   - floorplan-masked-area
    volumes:
      - ./.env:/app/.env
    restart: always

  visitor-blacklist-area:
    build:
      context: .
      dockerfile: Services.API/VisitorBlacklistArea/Dockerfile
    ports:
      - "5020:5020"
    # depends_on:
    #   - floorplan-masked-area
    #   - visitor
    volumes:
      - ./Uploads/visitorFaceImages:/app/Uploads/visitorFaceImages
      - ./.env:/app/.env
    restart: always

  ble-reader-node:
    build:
      context: .
      dockerfile: Services.API/BleReaderNode/Dockerfile
    ports:
      - "5021:5021"
    # depends_on:
    #   - mst-blereader
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-engine:
    build:
      context: .
      dockerfile: Services.API/MstEngine/Dockerfile
    ports:
      - "5022:5022"
    # depends_on:
    #   - mst-blereader
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "5000:5000"
    # depends_on:
    #   - auth
    #   - floorplan-device
    #   - floorplan-masked-area
    #   - mst-accesscctv
    #   - mst-accesscontrol
    #   - mst-application
    #   - mst-brand
    #   - mst-blereader
    #   - mst-department
    #   - mst-district
    #   - mst-floor
    #   - mst-floorplan
    #   - mst-integration
    #   - mst-member
    #   - mst-organization
    #   - tracking-transaction
    #   - visitor
    #   - visitor-blacklist-area
    #   - alarm-record-tracking
    #   - ble-reader-node
    volumes:
      - ./.env:/app/.env
    restart: always
