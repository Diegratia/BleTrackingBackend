services:
  auth:
    build:
      context: .
      dockerfile: Services.API/Auth/Dockerfile
    ports:
      - "10001:10001"
    volumes:
      - ./.env:/app/.env
    restart: always

  floorplan-device:
    build:
      context: .
      dockerfile: Services.API/FloorplanDevice/Dockerfile
    ports:
      - "10003:10003"
    volumes:
      - ./.env:/app/.env
    restart: always

  floorplan-masked-area:
    build:
      context: .
      dockerfile: Services.API/FloorplanMaskedArea/Dockerfile
    ports:
      - "10004:10004"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-floor:
    build:
      context: .
      dockerfile: Services.API/MstFloor/Dockerfile
    ports:
      - "10013:10013"
    volumes:
      - ./Uploads/FloorImages:/app/Uploads/FloorImages
      - ./.env:/app/.env
    restart: always

  mst-floorplan:
    build:
      context: .
      dockerfile: Services.API/MstFloorplan/Dockerfile
    ports:
      - "10014:10014"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-integration:
    build:
      context: .
      dockerfile: Services.API/MstIntegration/Dockerfile
    ports:
      - "10015:10015"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-accesscontrol:
    build:
      context: .
      dockerfile: Services.API/MstAccessControl/Dockerfile
    ports:
      - "10006:10006"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-accesscctv:
    build:
      context: .
      dockerfile: Services.API/MstAccessCctv/Dockerfile
    ports:
      - "10005:10005"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-blereader:
    build:
      context: .
      dockerfile: Services.API/MstBleReader/Dockerfile
    ports:
      - "10008:10008"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-brand:
    build:
      context: .
      dockerfile: Services.API/MstBrand/Dockerfile
    ports:
      - "10009:10009"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-application:
    build:
      context: .
      dockerfile: Services.API/MstApplication/Dockerfile
    ports:
      - "10007:10007"
    volumes:
      - ./.env:/app/.env
    restart: always

  visitor:
    build:
      context: .
      dockerfile: Services.API/Visitor/Dockerfile
    ports:
      - "10019:10019"
    volumes:
      - ./.env:/app/.env
    restart: always

  alarm-record-tracking:
    build:
      context: .
      dockerfile: Services.API/AlarmRecordTracking/Dockerfile
    ports:
      - "10002:10002"
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-building:
    build:
      context: .
      dockerfile: Services.API/MstBuilding/Dockerfile
    ports:
      - "10010:10010"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-department:
    build:
      context: .
      dockerfile: Services.API/MstDepartment/Dockerfile
    ports:
      - "10011:10011"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-district:
    build:
      context: .
      dockerfile: Services.API/MstDistrict/Dockerfile
    ports:
      - "10012:10012"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-member:
    build:
      context: .
      dockerfile: Services.API/MstMember/Dockerfile
    ports:
      - "10016:10016"
    # depends_on:
    #   - mst-application
    #   - mst-organization
    #   - mst-department
    #   - mst-district
    volumes:
      - ./Uploads/MemberFaceImages:/app/Uploads/MemberFaceImages
      - ./.env:/app/.env
    restart: always

  mst-organization:
    build:
      context: .
      dockerfile: Services.API/MstOrganization/Dockerfile
    ports:
      - "10017:10017"
    # depends_on:
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  tracking-transaction:
    build:
      context: .
      dockerfile: Services.API/TrackingTransaction/Dockerfile
    ports:
      - "10018:10018"
    # depends_on:
    #   - mst-blereader
    #   - floorplan-masked-area
    volumes:
      - ./.env:/app/.env
    restart: always

  visitor-blacklist-area:
    build:
      context: .
      dockerfile: Services.API/VisitorBlacklistArea/Dockerfile
    ports:
      - "10020:10020"
    # depends_on:
    #   - floorplan-masked-area
    #   - visitor
    volumes:
      - ./Uploads/visitorFaceImages:/app/Uploads/visitorFaceImages
      - ./.env:/app/.env
    restart: always

  ble-reader-node:
    build:
      context: .
      dockerfile: Services.API/BleReaderNode/Dockerfile
    ports:
      - "10021:10021"
    # depends_on:
    #   - mst-blereader
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always

  mst-engine:
    build:
      context: .
      dockerfile: Services.API/MstEngine/Dockerfile
    ports:
      - "10022:10022"
    # depends_on:
    #   - mst-blereader
    #   - mst-application
    volumes:
      - ./.env:/app/.env
    restart: always


  card-record:
    build:
      context: .
      dockerfile: Services.API/CardRecord/Dockerfile
    ports:
      - "10024:10024"
    volumes:
      - ./.env:/app/.env
    restart: always

  trx-visitor:
    build:
      context: .
      dockerfile: Services.API/TrxVisitor/Dockerfile
    ports:
      - "10025:10025"
    volumes:
      - ./.env:/app/.env
    restart: always
  card:
    build:
      context: .
      dockerfile: Services.API/Card/Dockerfile
    ports:
      - "10026:10026"
    volumes:
      - ./.env:/app/.env
    restart: always

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "10000:10000"
    volumes:
      - ./.env:/app/.env
    restart: always
